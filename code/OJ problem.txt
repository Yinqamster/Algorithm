problem1_A
问题 A: 最大子序列和问题
题目描述
给定一整数序列 a1, a2, …, an，求 a1~an 的一个子序列 ai~aj，使得从 ai 到 aj 的和最大。
只需要求出最大子序列的和，而不需要求出最大的那个序列。
输入
一组整数，数字和数字之间以空格隔开。
输出
该整数序列中最大子序列的和
样例输入
-2 11 -4 13 -5 -2
样例输出
20
提示
应用穷举法可以得到 O(n3) 的算法，优化他即可得到 O(n2) 的算法。这两个算法将会超时。
利用分治的思想可以有 O(n*logn) 的算法。
也有聪明的算法，他的复杂度是 O(n) 的。
另请注意：输入多少个数是未知的。请思考如何处理。


problem1_B
问题 B: 中位数附近2k+1个数
题目描述
给出一串整型数a1,a2,...,an以及一个较小的常数k，找出这串数的中位数m和最接近m的小于等于m的k个数，以及最接近m的大于等于m的k个数。将这2k+1个数按升序排序后输出。
中位数定义：如果数串的大小是偶数2j，中位数是从小到大排列的第j个数；如果数串的大小是奇数2j+1，中位数是从小到大排列的第j+1个数。
输入
第一行是k的值和数串的长度n。
第二行是以空格隔开的n个整型数，最后一个数后面有空格。
输出
按升序排列的2k+1个数，以空格分开，最后一个数后面没有空格。结果可能出现重复的数。
样例输入
2 8
1 8 3 5 10 2 4 2
样例输出
2 2 3 4 5
提示
使用时间复杂度是O(n)的算法。

problem2_A
问题 A: 动态中位数问题
题目描述
输入一组整数a1, a2, …, an ，每输入一个整数，输出到此时为止的中位数。
中位数定义：如果数串的大小是偶数 2j，中位数是从小到大排列的第 j 个数；如果数串的大小是奇数 2j+1，中位数是从小到大排列的第 j+1 个数。
输入
一组整数，数字和数字之间以空格隔开。
输出
一组整数，数字和数字之间以空格隔开。最后一个数后面也有空格。
第 i 个输出的整数，是前 i 个输入的中位数。
样例输入
-18 -2 14 -20 -6 7 2 14 11 6 
样例输出
-18 -18 -2 -18 -6 -6 -2 -2 2 2
提示
时间复杂度请不要超过O(nlogn)。
由于输入输出的量会比较大，因此推荐使用c语言中的scanf和printf函数来进行输入输出，能比c++中cin和cout节省许多时间。


problem2_B
问题 B: 联合中位数问题
题目描述
给出两个长度为n的数组A1,A2,...An, B1,B2,...Bn,所有2n个数互不相同，并且数组A和数组B按照升序排列。要求找出这2n个数的中位数。
中位数的定义和之前相同。
输入
输入分3行：第1行是n的值，第2行是以空格分隔的数组A的元素，第3行是以空格分隔的数组B的元素。2、3行最后有空格。
输出
输出所求中位数，末尾没有空格。
样例输入
4
1 2 3 4 
5 6 7 8 
样例输出
4
提示
使用时间复杂度为O(logn)的方法。
由于输入输出的量会比较大，因此推荐使用c语言中的scanf和printf函数来进行输入输出，能比c++中cin和cout节省许多时间。


problem3_A
问题 A: 回文词
题目描述
回文词是指由相同的字母组成的单词，如eat、tea是回文词。本次问题给出一串单词，你需要找到所有的回文词。
输入
输入由两行组成：第一行是所有单词的总数，第二行是由空格分隔的单词列表。两行末尾都有空格。
输出
第一行是回文词组的个数，后面是所有的回文词。每个输出的回文词占一行。一组回文词只需要输出一个字典序最小的代表即可，如eat、tea中eat字典序小于tea，所以输出eat。回文词与回文词也按照字典序从小到大排列，如eat和el中eat字典序小于el所以eat在el前面。
输出的每一行最后都没有空格。
样例输入
9
a ew vc tea oe eat zoo el le 
样例输出
2
eat
el
提示
使用代价为O(nlgn)的方法。

problem3_B
问题 B: 最小生成树 
题目描述
给定一个无向连通图，求出它的最小生成树。
由于最小生成树可能有多种，因此答案只需要给出最后得到的最小生成树的边总权值。
若有n个点，则各个点以整数0到n-1编号。
输入
第一行为一个数字，表示总点数。
之后的每一行，格式为3个数字，以空格隔开，分别为相连的两个点的编号，它们的边的权值。
注：输入为无向图。如果出现了“0 1 50”表示点0和点1之间有一条边，权值为50，则不会再出现“1 0 50”输入。
输出
最小生成树的边总权值
样例输入
6
0 1 6
0 2 1
0 3 5
1 2 5
1 4 3
2 3 7
2 4 5
2 5 4
3 5 2
4 5 6
样例输出
15
提示
学习两种最小生成树的算法